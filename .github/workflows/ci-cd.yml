name: CI-CD

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, master]

permissions:
  contents: write

env:
  PYTHON_VERSION: 3.11
  POETRY_VERSION: 1.7.1
  POETRY_URL: https://install.python-poetry.org

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      # Init
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        id: setup_python
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Poetry
      - name: Poetry caching
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: pypoetry-bin-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
          restore-keys: |
            pypoetry-bin-

      - name: Install Poetry ${{ env.POETRY_VERSION }}
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Packages
      - name: Package caching
        uses: actions/cache@v3
        with:
          path: ~/.cache/packages-local
          key: packages-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            packages-local-

      - name: Install dependencies
        run: poetry install --without test

      # Deploy
      - name: Deploy site
        run: |
          poetry run \
            mkdocs gh-deploy \
              --config-file src/mkdocs_demo/mkdocs.yml \
              --clean \
              --use-directory-urls \
              --force

      # Artifacts
      - name: Build release artifacts
        id: build_artifacts
        run: |
          poetry build -vf sdist
          echo "targets=./dist/*" >> $GITHUB_OUTPUT

      - name: Upload release artifact
        uses: AButler/upload-release-assets@v3.0
        with:
          files: ${{ steps.build_artifacts.outputs.targets }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "1.1"
